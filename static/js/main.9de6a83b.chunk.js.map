{"version":3,"sources":["store/reducer/searchReducer.ts","assets/images/background.jpg","components/Layout/globalStyle.ts","components/Layout/style.ts","store/actions/searchAction.ts","store/actions/types.ts","components/Search/style.ts","components/Search/index.ts","components/Search/Search.tsx","components/Heading/style.ts","components/Heading/index.ts","components/Heading/Heading.tsx","components/WeatherBoard/style.ts","components/Unit/style.ts","components/Unit/index.ts","components/Unit/Unit.tsx","components/WeatherBoard/index.ts","components/WeatherBoard/WeatherBoard.tsx","components/Layout/index.ts","components/Layout/Layout.tsx","theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialState","loading","error","weather","coord","lon","lat","id","main","description","icon","base","temp","feels_like","temp_min","temp_max","pressure","humidity","visibility","wind","speed","deg","clouds","all","dt","sys","type","message","country","sunrise","sunset","timezone","name","cod","useSelector","GlobalStyle","createGlobalStyle","background","Container","styled","div","WeatherContainer","fetchWeatherData","city","dispatch","a","axios","get","process","then","resp","console","log","payload","data","catch","err","Error","SearchContainer","SearchBar","input","Icon","i","Search","props","useState","citySearch","setCitySearch","useEffect","useDispatch","handleChange","React","useCallback","e","target","value","className","placeholder","onChange","onClick","style","position","HeadingWrapper","HeadingText","h1","Heading","text","BoardWrapper","MainWeatherInfo","SecondaryWeatherInfo","SecondaryItem","UnitContainer","p","size","Unit","symbol","state","unitValue","Math","round","aria-hidden","WeatherBoard","src","Layout","weatherMain","weatherWind","weatherInfo","theme","colors","primary","secondary","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","composeEnhancers","composeWithDevTools","store","createStore","action","applyMiddleware","thunk","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9de6a83b.chunk.js","sourcesContent":["import { WeatherActions } from '../actions/types'\nimport { State } from '../types'\nimport { TypedUseSelectorHook, useSelector } from 'react-redux'\n\nexport const initialState: State = {\n  loading: false,\n  error: '',\n  weather: {\n    coord: {\n      lon: 0,\n      lat: 0\n    },\n    weather: [{\n      id: 0,\n      main: '',\n      description: '',\n      icon: ''\n    }],\n    base: '',\n    main: {\n      temp: 0,\n      feels_like: 0,\n      temp_min: 0,\n      temp_max: 0,\n      pressure: 0,\n      humidity: 0\n    },\n    visibility: 0,\n    wind: {\n      speed: 0,\n      deg: 0\n    },\n    clouds: {\n      all: 0\n    },\n    dt: 0,\n    sys: {\n      type: 0,\n      id: 0,\n      message: 0,\n      country: '',\n      sunrise: 0,\n      sunset: 0\n    },\n    timezone: 0,\n    id: 0,\n    name: '',\n    cod: 0,\n  }\n}\n\nexport const searchReducer = (state = initialState, action: WeatherActions): State => {\n  switch(action.type) {\n    case 'CLEAR_STATE':\n      return initialState\n    case 'LOADING_WEATHER':\n      return {\n        ...state,\n        loading: true,\n      }\n    case 'LOADING_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        weather: {\n          ...action.payload,\n        }\n      }\n    case 'LOADING_ERROR': \n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      }\n    default: return state\n  }\n}\n\n// typed selector\nexport const useTypedSelector: TypedUseSelectorHook<State> = useSelector","export default __webpack_public_path__ + \"static/media/background.7128aa10.jpg\";","import { createGlobalStyle } from 'styled-components'\nimport background from '../../assets/images/background.jpg'\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n  }\n  body {\n    background-image: url(${background});\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    p {\n      margin: 0;\n      color: #fff;\n    }\n    #root {\n      height: 100%;\n      .App {\n        height: 100%;\n      }\n    }\n  }\n`\n\nexport default GlobalStyle","import styled from 'styled-components'\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  height: 100%;\n`\n\nconst WeatherContainer = styled.div`\n  position: relative;\n  width: 85%;\n  height: 100%;\n  margin: auto;\n`\n\nexport {\n  Container,\n  WeatherContainer\n}","import { ClearState, LoadingWeather, LoadingSuccess, LoadingError, CLEAR_STATE, LOADING_ERROR, LOADING_SUCCESS, LOADING_WEATHER, WeatherActions } from './types' \nimport { WeatherModel, Error } from '../types'\nimport axios from 'axios'\nimport { ThunkAction } from 'redux-thunk'\nimport { State } from '../types'\n\nconst URL = process.env.REACT_APP_WEATHER_URL\nconst API = process.env.REACT_APP_API_KEY\n\nexport const clearState = (): ClearState => ({\n  type: CLEAR_STATE,\n})\n\nexport const loadingWeather = (): LoadingWeather => ({\n  type: LOADING_WEATHER,\n})\n\nexport const weatherSuccess = (weather: WeatherModel): LoadingSuccess => ({\n  type: LOADING_SUCCESS,\n  payload: weather,\n})\n\nexport const loadingError = (error: Error): LoadingError => ({\n  type: LOADING_ERROR,\n  payload: error,\n})\n\n\n// ThunkAction<ReturnType, RootState, unknown, Action>\ntype Effect = ThunkAction<void, State, unknown, WeatherActions>\n\nexport const fetchWeatherData = (city: string): Effect => async (dispatch) => {\n  dispatch(clearState())\n  dispatch(loadingWeather())\n  try {\n    return await axios.get(`${URL}${city}&units=metric&appid=${API}`)\n      .then((resp) => {\n        console.log('res', resp)\n        dispatch(weatherSuccess(resp.data))\n      })\n      .catch((err) => {\n        console.log('err', err)\n        dispatch(loadingError(err))\n      })\n  }\n  catch(e) {\n    throw Error(`Network Error: ${e}`)\n  }\n}","import { Action } from 'redux'\nimport { WeatherModel, Error } from '../types'\n\nexport const LOADING_WEATHER = 'LOADING_WEATHER'\ntype LOADING_WEATHER = typeof LOADING_WEATHER\n\nexport const CLEAR_STATE = 'CLEAR_STATE'\ntype CLEAR_STATE = typeof CLEAR_STATE\n\nexport const LOADING_SUCCESS = 'LOADING_SUCCESS'\ntype LOADING_SUCESS = typeof LOADING_SUCCESS\n\nexport const LOADING_ERROR = 'LOADING_ERROR'\ntype LOADING_ERROR = typeof LOADING_ERROR\n\nexport interface ClearState extends Action {\n  type: CLEAR_STATE\n}\nexport interface LoadingWeather extends Action {\n  type: LOADING_WEATHER\n}\nexport interface LoadingSuccess extends Action {\n  type: LOADING_SUCESS\n  payload: WeatherModel\n}\nexport interface LoadingError extends Action {\n  type: LOADING_ERROR,\n  payload: Error,\n}\n\nexport type WeatherActions =\n  LoadingWeather | LoadingSuccess | LoadingError | ClearState","import styled from 'styled-components'\n\ntype Props = {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\n}\n\nconst SearchContainer = styled.div`\n  position: relative;\n  margin-top: 30px;\n  padding: 10px;\n  overflow: hidden;\n  width: 30%;\n  margin: auto;\n\n  @media only screen and (max-width: 767px) {\n    width: 90%;\n    padding-left: 0;\n  }\n\n  button {\n    background: transparent;\n    border: none;\n    position: absolute!important;\n    display: inline-block;\n    width: auto;\n    height: auto;\n    right: 0;\n    bottom: 10px;\n    font-size: 0.8em;\n    cursor: pointer;\n    // override Icon styled comp for search button\n    i {\n      position: relative;\n      bottom: 0;\n    } \n  }\n`\n\nconst SearchBar = styled.input<Props>`\n  position: relative;\n  display: block;\n  background: none;\n  color: #fff;\n  border: none;\n  border-bottom: 1px solid #fff;\n  width: 100%;\n  outline: none;\n  padding-left: 40px;\n  font-size: 18px;\n  caret-color: orange;\n  line-height: 28px;\n\n  &:focus {\n    ::placeholder {\n      color: transparent;\n    }\n  }\n`\n\nconst Icon = styled.i`\n  position: absolute;\n  color: #fff;\n  bottom: 10px;\n  font-size: 1.5em;\n`\n\nexport {\n  SearchContainer,\n  SearchBar,\n  Icon \n}","import { Search } from './Search'\n\nexport default Search","import React, { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { fetchWeatherData } from '../../store/actions/searchAction'\nimport { SearchContainer, SearchBar, Icon } from './style'\n\nexport interface Props {}\n\nexport const Search: React.FC<Props> = (props: Props) => {\n\n  const [citySearch, setCitySearch] = useState<string>('peterborough')\n\n  useEffect(() => {\n    dispatch(fetchWeatherData(citySearch))\n  }, [])\n\n  const dispatch = useDispatch()\n\n  const handleChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => setCitySearch(e.target.value), [])\n\n  const handleClick = () => dispatch(fetchWeatherData(citySearch))\n\n  return (\n    <SearchContainer>\n      <Icon className=\"fab fa-searchengin\"></Icon>\n      <SearchBar\n        type=\"text\"\n        placeholder=\"Enter a city\"\n        onChange={handleChange}\n        value={citySearch}\n      />\n      <button onClick={handleClick} style={{ position: 'relative'}}>\n        <Icon className=\"fas fa-arrow-right\"></Icon>\n      </button>\n    </SearchContainer>\n  ) \n}","import styled from 'styled-components'\n\nconst HeadingWrapper = styled.div`\n  position: relative;\n`\n\nconst HeadingText = styled.h1`\n  position: relative;\n  font-size: 1em;\n  color: #fff;\n  text-align: left;\n`\n\nexport {\n  HeadingWrapper,\n  HeadingText,\n}","import { Heading } from './Heading'\n\nexport default Heading","import React from 'react'\nimport { HeadingWrapper, HeadingText } from './style'\n\nexport interface Props {\n  text: string,\n}\n\nexport const Heading: React.FC<Props> = ({\n  text,\n}) => {\n  return (\n    <HeadingWrapper>\n      <HeadingText>\n        {text}\n      </HeadingText>\n    </HeadingWrapper>\n  )\n}","import styled from 'styled-components'\n\nconst BoardWrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 80%;\n  margin: auto;\n`\n\n// icon and temperature + description\nconst MainWeatherInfo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width:100%; \n\n  p {\n    color: #fff;\n    margin: 0;\n    &:first-child {\n      font-size: 35px;\n    }\n  }\n\n`\n\n// container for rest of temp details\nconst SecondaryWeatherInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: relative;\n  width: 70%;\n  background-color: rgba(255, 255, 255, 0.2);\n  padding: 30px;\n  border-radius: 15px;\n`\n\nconst SecondaryItem = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 20%;\n  p {\n    text-transform: lowercase;\n    &:first-child {\n      padding-bottom: 10px;\n    }\n  }\n`\n\nexport {\n  MainWeatherInfo,\n  BoardWrapper,\n  SecondaryWeatherInfo,\n  SecondaryItem,\n} ","import styled from 'styled-components'\n\ntype StyledProps = {\n  size?: number,\n}\n\nconst UnitContainer = styled.p<StyledProps>`\n  font-size: ${ props => props.size ? `${props.size}px` : '25px'};\n`\n\nexport default UnitContainer","import Unit from './Unit'\n\nexport default Unit","import React from 'react'\nimport { isEmpty } from 'lodash'\nimport { useSelector } from 'react-redux'\nimport UnitContainer from './style'\nimport { State } from '../../store/types'\n\ninterface Props {\n  temp: number,\n  size?: number,\n  type: 'deg' | 'percentage' | 'pressure' | 'mph'\n}\n\nconst Unit: React.FC<Props> = ({\n  temp,\n  size,\n  type,\n}) => {\n\n  const state = useSelector((state: State) => state)\n  const { loading, error, weather } = state\n\n  const unitValue =\n    error !== ''\n      ? '-'\n      : Math.round(temp)\n\n  let symbol \n\n  if (type === 'deg') symbol = <>&#176;</>\n  else if (type === 'percentage') symbol = <>&#37;</>\n  else if (type === 'mph') symbol = 'mph'\n  else symbol === ''\n\n  return (\n    <UnitContainer size={size}>\n\n      { \n        loading \n        ? <i className=\"fa fa-spinner\" aria-hidden=\"true\"></i>\n        : <>{unitValue}{symbol}</>\n      }\n\n      \n    </UnitContainer>\n  )\n}\n\nexport default Unit","import { WeatherBoard } from './WeatherBoard'\n\nexport default WeatherBoard","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { BoardWrapper, MainWeatherInfo, SecondaryWeatherInfo, SecondaryItem}  from './style'\nimport Unit from '../Unit'\nimport { State } from '../../store/types'\n\ntype Main = {\n  feels_like: number,\n  temp_min: number,\n  temp_max: number,\n  humidity: number,\n  pressure: number,\n  temp: number,\n}\n\ntype Weather = {\n  description: string,\n  icon: string,\n  main: string,\n}\ninterface Props {\n  main: Main,\n  weather: Weather,\n}\n\nexport const WeatherBoard: React.FC<any> = ({\n  weather,\n  main,\n  wind,\n}) => {\n\n  const state = useSelector((state: State) => state.weather)\n  const { name } = state\n  const { feels_like, temp_min, temp_max, humidity, pressure, temp } = main\n  const { description, icon, main: mainDescription } = weather\n  const { speed } = wind\n\n\n  return (\n    <BoardWrapper>\n      <MainWeatherInfo>\n        <div>\n          {\n            name !== '' \n              ? <img src={`http://openweathermap.org/img/wn/${icon}@4x.png`} />\n              : <i className=\"fas fa-cloud-moon fa-7x\"></i>\n          }\n        </div>\n        <div>\n          <p>{Math.round(temp)}&#176;</p>\n          <p>{description} </p>\n        </div>\n      </MainWeatherInfo>\n      <SecondaryWeatherInfo>\n        <SecondaryItem>\n          <Unit \n            temp={feels_like}\n            type='deg'\n          />\n          <p>Feels Like</p>\n        </SecondaryItem>\n        <SecondaryItem>\n          <Unit \n            temp={speed}\n            type='mph'\n          />\n          <p>Wind</p>\n        </SecondaryItem>\n        <SecondaryItem>\n          <Unit \n            temp={temp_max}\n            type='deg'\n          />\n          <p>Max</p>\n        </SecondaryItem>\n        <SecondaryItem>\n          <Unit \n            temp={humidity}\n            type='deg'\n          />\n          <p>Humidity</p>\n        </SecondaryItem>\n        <SecondaryItem>\n          <Unit \n            temp={pressure}\n            type='pressure'\n          />\n          <p>Pressure</p>\n        </SecondaryItem>\n      </SecondaryWeatherInfo>\n    </BoardWrapper>\n  )\n}\n","import { Layout } from './Layout'\n\nexport default Layout","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport GlobalStyle from './globalStyle'\nimport {Container, WeatherContainer} from './style'\nimport Search from '../Search'\nimport Heading from '../Heading'\nimport WeatherBoard from '../WeatherBoard'\nimport { State } from '../../store/types'\n\n\nexport interface Props {}\n\nexport const Layout: React.FC<Props> = () => {\n\n  const weatherMain  = useSelector<State>(state => state.weather.main)\n  const weatherWind  = useSelector<State>(state => state.weather.wind)\n  const weatherInfo = useSelector<State>(state => state.weather.weather[0])\n\n  return (\n    <>\n      <GlobalStyle />\n      <Container>\n        <Heading text='Weather app - React/Typescript' />\n        <Search />\n        <WeatherContainer>\n\n        <WeatherBoard\n          weather={weatherInfo}\n          main={weatherMain}\n          wind={weatherWind}\n        />\n        </WeatherContainer>\n      </Container>\n    </>\n  )\n}","import { DefaultTheme } from 'styled-components'\n\nexport const theme: DefaultTheme = {\n  colors: {\n    primary: '#1A4314',\n    secondary: '#1D65A6'\n  }\n}","import React from 'react'\nimport Layout from './components/Layout'\nimport { ThemeProvider } from 'styled-components'\nimport { theme } from './theme'\n\nconst App: React.VoidFunctionComponent = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <Layout />\n      </div>\n    </ThemeProvider>\n  ) \n}\n\nexport default App\n ","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { applyMiddleware, createStore } from 'redux'\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport { searchReducer, initialState } from './store/reducer/searchReducer'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst composeEnhancers = composeWithDevTools({})\nconst store = createStore(searchReducer, initialState, composeEnhancers(applyMiddleware(thunk)))\n\nconsole.log('store', store.getState())\n\nReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}